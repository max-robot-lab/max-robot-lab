{"version":3,"file":"static/js/665.cb9f6dae.chunk.js","mappings":"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","sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience.js","components/Resume/Experience/Job.js","components/Resume/Others.js","data/resume/degree_maxin.js","data/resume/work_maxin.js","data/resume/others_maxin.js","pages/resumes/Resume_MaXin.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Degree = ({ data }) => (\r\n  <article className=\"degree-container\">\r\n    <header>\r\n      <h4 className=\"degree\">{data.degree}</h4>\r\n      <p className=\"school\"><a href={data.link}>{data.school}</a></p>\r\n    </header>\r\n  </article>\r\n);\r\n\r\nDegree.propTypes = {\r\n  data: PropTypes.shape({\r\n    degree: PropTypes.string.isRequired,\r\n    link: PropTypes.string.isRequired,\r\n    school: PropTypes.string.isRequired,\r\n    // year: PropTypes.string.isRequired,\r\n    // GPA: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Degree;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Degree from './Education/Degree';\r\n\r\nconst Education = ({ data }) => (\r\n  <div className=\"education\">\r\n    <div className=\"link-to\" id=\"education\" />\r\n    <div className=\"title\">\r\n      <h3>Education</h3>\r\n    </div>\r\n    {data.map((degree) => (\r\n      <Degree\r\n        data={degree}\r\n        key={degree.school}\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nEducation.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.shape({\r\n    school: PropTypes.string,\r\n    degree: PropTypes.string,\r\n    link: PropTypes.string,\r\n    // year: PropTypes.number,\r\n  })),\r\n};\r\n\r\nEducation.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nexport default Education;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Job from './Experience/Job';\r\n\r\nconst Experience = ({ data }) => (\r\n  <div className=\"experience\">\r\n    <div className=\"link-to\" id=\"experience\" />\r\n    <div className=\"title\">\r\n      <h3>Work Experiences</h3>\r\n    </div>\r\n    {data.map((job) => (\r\n      <Job\r\n        data={job}\r\n        key={`${job.name}-${job.position}`}\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nExperience.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.exact({\r\n    name: PropTypes.string,\r\n    position: PropTypes.string,\r\n    url: PropTypes.string,\r\n    startDate: PropTypes.string,\r\n    endDate: PropTypes.string,\r\n    highlights: PropTypes.arrayOf(PropTypes.string),\r\n    summary: PropTypes.string,\r\n  })),\r\n};\r\n\r\nExperience.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nexport default Experience;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Markdown from 'markdown-to-jsx';\r\n\r\nconst Job = ({\r\n  data: {\r\n    name, url, startDate, summary, highlights,\r\n  },\r\n}) => (\r\n  <article className=\"jobs-container\">\r\n    <header>\r\n      <h4><a href={url}>{name}</a></h4>\r\n      <p className=\"daterange\"> {(startDate)}</p>\r\n    </header>\r\n    {summary ? (\r\n      <Markdown\r\n        options={{\r\n          overrides: {\r\n            p: {\r\n              props: {\r\n                className: 'summary',\r\n              },\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        {summary}\r\n      </Markdown>\r\n    ) : null}\r\n    {highlights ? (\r\n      <ul className=\"points\">\r\n        {highlights.map((highlight) => (\r\n          <li key={highlight}>{highlight}</li>\r\n        ))}\r\n      </ul>\r\n    ) : null}\r\n  </article>\r\n);\r\n\r\nJob.propTypes = {\r\n  data: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    position: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n    startDate: PropTypes.string.isRequired,\r\n    summary: PropTypes.string,\r\n    highlights: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  }).isRequired,\r\n};\r\n\r\nexport default Job;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Job from './Experience/Job';\r\n\r\nconst Others = ({ data }) => (\r\n  <div className=\"experience\">\r\n    <div className=\"link-to\" id=\"experience\" />\r\n    <div className=\"title\">\r\n      <h3>Others</h3>\r\n    </div>\r\n    {data.map((job) => (\r\n      <Job\r\n        data={job}\r\n        key={`${job.name}-${job.position}`}\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nOthers.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.exact({\r\n    name: PropTypes.string,\r\n    position: PropTypes.string,\r\n    url: PropTypes.string,\r\n    startDate: PropTypes.string,\r\n    endDate: PropTypes.string,\r\n    highlights: PropTypes.arrayOf(PropTypes.string),\r\n    summary: PropTypes.string,\r\n  })),\r\n};\r\n\r\nOthers.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nexport default Others;\r\n","const degrees = [\r\n  {\r\n    school: 'Dalian University of Technology',\r\n    degree: 'Ph.D. Mechatronic Engineering',\r\n    link: 'https://en.wikipedia.org/wiki/Dalian_University_of_Technology',\r\n    // year: 'Sep 2013 - Aug 2017',\r\n    // GPA: '83.9/100',\r\n  },\r\n  {\r\n    school: 'Dalian University of Technology',\r\n    degree: 'M.Sc. Mechatronic Engineering',\r\n    link: 'https://en.wikipedia.org/wiki/Dalian_University_of_Technology',\r\n    // year: 'Sep 2011 - Sep 2013',\r\n    // GPA: '90/100',\r\n  },\r\n  {\r\n    school: 'Dalian University of Technology',\r\n    degree: 'B.S. Measurement & Control Technology and Instruments',\r\n    link: 'https://en.wikipedia.org/wiki/Dalian_University_of_Technology',\r\n    // year: 'Sep 2007 - Sep 2011',\r\n    // GPA: '84.2/100',\r\n  },\r\n];\r\n\r\nexport default degrees;\r\n","/**\r\n * @typedef {Object} Position\r\n * Conforms to https://jsonresume.org/schema/\r\n *\r\n * @property {string} name - Name of the company\r\n * @property {string} position - Position title\r\n * @property {string} url - Company website\r\n * @property {string} startDate - Start date of the position in YYYY-MM-DD format\r\n * @property {string|undefined} endDate - End date of the position in YYYY-MM-DD format.\r\n * If undefined, the position is still active.\r\n * @property {string|undefined} summary - html/markdown summary of the position\r\n * @property {string[]} highlights - plain text highlights of the position (bulleted list)\r\n */\r\nconst work = [\r\n  {\r\n    name: 'Research Assistant Professor',\r\n    position: 'Ph.D.',\r\n    startDate: 'Dec 2021 - Apr 2025',\r\n    summary: `Mechanical and Automation Engineering department, The Chinese University of Hong Kong, \r\n    Hong Kong, China.`,\r\n    highlights: [\r\n\r\n    ],\r\n  },\r\n  {\r\n    name: 'Research Scientist',\r\n    position: 'Ph.D.',\r\n    startDate: 'Dec 2021 - Apr 2025',\r\n    summary: `Medical Robotics Center, Chinese University of Hong Kong, Hong Kong, \r\n    China.`,\r\n    highlights: [\r\n\r\n    ],\r\n  },\r\n  {\r\n    name: 'Postdoctoral Researcher',\r\n    position: 'Ph.D.',\r\n    startDate: 'Oct 2019 - Apr 2021',\r\n    summary: `School of Engineering Technology, Purdue University, USA. \r\n    (Supervisor: Richard Voyles, IEEE Fellow)`,\r\n    highlights: [\r\n\r\n    ],\r\n  },\r\n  {\r\n    name: 'Research Fellow',\r\n    position: 'Ph.D.',\r\n    startDate: 'Jun 2019 - Oct 2019',\r\n    summary: `Nanyang Technological University, \r\n    Singapore.`,\r\n    highlights: [\r\n\r\n    ],\r\n  },\r\n  {\r\n    name: 'Postdoctoral Fellow',\r\n    position: 'Ph.D.',\r\n    startDate: 'Aug 2017 - Jun 2019',\r\n    summary: `Surgery Department, Chinese University of Hong Kong, Hong Kong, \r\n    China.`,\r\n    highlights: [\r\n\r\n    ],\r\n  },\r\n];\r\n\r\nexport default work;\r\n","/**\r\n * @typedef {Object} Position\r\n * Conforms to https://jsonresume.org/schema/\r\n *\r\n * @property {string} name - Name of the company\r\n * @property {string} position - Position title\r\n * @property {string} url - Company website\r\n * @property {string} startDate - Start date of the position in YYYY-MM-DD format\r\n * @property {string|undefined} endDate - End date of the position in YYYY-MM-DD format.\r\n * If undefined, the position is still active.\r\n * @property {string|undefined} summary - html/markdown summary of the position\r\n * @property {string[]} highlights - plain text highlights of the position (bulleted list)\r\n */\r\nconst work = [\r\n  {\r\n    name: '青年编委：《浙江大学学报·理学版》',\r\n    position: 'Ph.D.',\r\n    summary: `Youth Editorial Board Member, Journal of Zhejiang University: Science \r\n    A`,\r\n    highlights: [\r\n\r\n    ],\r\n  },\r\n  {\r\n    name: '青年编委：Nature Discover Robotics',\r\n    position: 'Ph.D.',\r\n    summary: `Youth Editorial Board Member, Nature Discover \r\n    Robotics`,\r\n    highlights: [\r\n\r\n    ],\r\n  },\r\n];\r\n\r\nexport default work;\r\n","import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nimport Main from '../../layouts/Main';\r\n\r\nimport Education from '../../components/Resume/Education';\r\nimport Experience from '../../components/Resume/Experience';\r\nimport Others from '../../components/Resume/Others';\r\n// import Skills from '../../components/Resume/Skills';\r\n// import Courses from '../../components/Resume/Courses';\r\n// import References from '../../components/Resume/References';\r\n\r\n// import courses from '../../data/resume/courses';\r\nimport degrees from '../../data/resume/degree_maxin';\r\nimport work from '../../data/resume/work_maxin';\r\nimport others from '../../data/resume/others_maxin';\r\n// import { skills, categories } from '../../data/resume/skills';\r\n\r\n// NOTE: sections are displayed in order defined.\r\nconst sections = {\r\n  Education: () => <Education data={degrees} />,\r\n  Experience: () => <Experience data={work} />,\r\n  Others: () => <Others data={others} />,\r\n};\r\n\r\nconst Resume = () => (\r\n  <Main\r\n    title=\"Resume\"\r\n    description=\"Xin Ma's Degrees.\"\r\n  >\r\n    <Helmet>\r\n      <meta charSet=\"utf-8\" />\r\n      <title>People</title>\r\n      <meta name=\"description\" content={111} />\r\n    </Helmet>\r\n    <article className=\"post\" id=\"resume\">\r\n      <header>\r\n        <div className=\"title\">\r\n          <h2>Prof. Xin Ma (马鑫教授)</h2>\r\n          <h3>Assistant Professor, Lab Lead</h3>\r\n        </div>\r\n      </header>\r\n      {Object.entries(sections).map(([name, Section]) => (\r\n        <Section key={name} />\r\n      ))}\r\n    </article>\r\n  </Main>\r\n);\r\n\r\nexport default Resume;\r\n"],"names":["_ref","data","_jsx","className","children","_jsxs","degree","href","link","school","Education","id","map","Degree","defaultProps","Experience","job","Job","concat","name","position","url","startDate","summary","highlights","Markdown","options","overrides","p","props","highlight","Others","sections","degrees","work","others","Resume","Main","title","description","Helmet","charSet","content","Object","entries","Section"],"sourceRoot":""}